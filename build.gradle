/*Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

              https://www.apache.org/licenses/LICENSE-2.0

          Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
        ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.*/

plugins {
    id 'java'
    id 'application'
}

tasks.withType(AbstractCopyTask).all {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

group = 'com.ghostwalker18.scheduledesktop'
version = '1.1'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.intellij:forms_rt:7.0.3"
    implementation "com.formdev:flatlaf:3.5"
    implementation "org.javatuples:javatuples:1.2"
    implementation "io.reactivex.rxjava3:rxjava:3.1.5"
    implementation "org.jsoup:jsoup:1.12.2"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "org.apache.poi:poi-ooxml:3.17"
    implementation "org.xerial:sqlite-jdbc:3.42.0.0"
    implementation "com.github.gwenn:sqlite-dialect:0.1.4"
    implementation "org.hibernate:hibernate-core:5.4.33.Final"
    implementation "org.apache.xmlbeans:xmlbeans:3.1.0"
    implementation "javax.xml.stream:stax-api:1.0"
    implementation "com.fasterxml:aalto-xml:1.2.2"
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}


application {
    mainClass = 'com.ghostwalker18.scheduledesktop.Application'
}

jar {
    manifest {
        attributes("Main-Class" : "com.ghostwalker18.scheduledesktop.Application",
                'Created-By' : 'Ipatov Nikita')
    }

    from {
        configurations.runtimeClasspath.collect{
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

test {
    useJUnitPlatform()
}