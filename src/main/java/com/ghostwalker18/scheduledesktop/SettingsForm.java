package com.ghostwalker18.scheduledesktop;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.util.HashMap;
import java.util.ResourceBundle;
import java.util.Vector;
import java.util.prefs.Preferences;

public class SettingsForm {
    private static ResourceBundle languages = ResourceBundle.getBundle("languages", new XMLBundleControl());
    public static HashMap<String, String> languagesCodes = new HashMap<>();

    static {
        languagesCodes.put(languages.getString("ru"), "ru");
        languagesCodes.put(languages.getString("en"), "en");
        languagesCodes.put(languages.getString("be"), "be");
        languagesCodes.put(languages.getString("uk"), "uk");
        languagesCodes.put(languages.getString("kk"), "kk");
    }

    private final Preferences preferences = Application.getPreferences();
    private JComboBox languageComboBox;
    private JButton saveButton;
    private JLabel languageLabel;
    public JPanel mainPanel;

    public SettingsForm() {
        $$$setupUI$$$();
        languageComboBox.setModel(new DefaultComboBoxModel(new Vector(languagesCodes.keySet())));
        saveButton.addActionListener(e -> {
            save();
            Application.restartApplication();
        });
    }

    private void save() {
        String selectedLanguage = languageComboBox.getSelectedItem().toString();
        preferences.put("language", languagesCodes.get(selectedLanguage));
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        languageLabel = new JLabel();
        languageLabel.setText("Язык");
        mainPanel.add(languageLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(145, 16), null, 0, false));
        final Spacer spacer1 = new Spacer();
        mainPanel.add(spacer1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(145, 14), null, 0, false));
        languageComboBox = new JComboBox();
        mainPanel.add(languageComboBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        saveButton = new JButton();
        saveButton.setText("Сохранить");
        mainPanel.add(saveButton, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
